#!/usr/bin/env bash
set -e

BRANCH="$1"

fzf_git() {

  repo_root=$(git rev-parse --show-toplevel)
  echo "$repo_root"

  list_changed_files() {
    (
      cd "$repo_root" || exit 1
      git diff --name-only
      git ls-files --other --exclude-standard
    ) | sort -u
  }

  any_file_staged=false

  staged_files=$(list_changed_files | fzf \
    --ansi \
    --style=full \
    --multi \
    --no-sort \
    --prompt='Stage > ' \
    --header-first \
    --header='ENTER to stage selected files (CTRL-C to quit)' \
    --preview "git -C '$repo_root' diff --color=always -- {} | diff-so-fancy" \
    --bind 'enter:accept' \
    --border --padding=0,0 \
    --border-label ' Git Diff ' --input-label ' Search File ' \
    --color 'border:#aaaaaa,label:#cccccc' \
    --color 'preview-border:#9999cc,preview-label:#ccccff' \
    --color 'list-border:#f38ba8,list-label:#99cc99' \
    --color 'input-border:#cba6f7,input-label:#89dceb' \
    --color 'header-border:#6699cc,header-label:#99ccff')

  if [[ -z "$staged_files" ]]; then
    break
  fi
}

do_commit() {

  any_file_staged=true

  IFS=$'\n'

  set -- $staged_files
  git -C "$repo_root" add "$@"

  # If nothing was staged, exit immediately
  if [[ "$any_file_staged" == false ]]; then
    echo -e "\e[1;33mNo files staged. Exiting.\e[0m"
    exit 0
  fi

  if [[ -z "$SSH_AUTH_SOCK" ]]; then
    eval "$(ssh-agent -s)" >/dev/null
  fi
}

push() {

  OUTPUT=$(ssh-add ~/.ssh/github 2>&1)
  if [[ $OUTPUT =~ Identity\ added:\ .*\((.*)\) ]]; then
    EMAIL=${BASH_REMATCH[1]}
    echo -e "\e[1;32m✔ Identity added:\e[0m \e[1;33m$EMAIL\e[0m"
  elif [[ $OUTPUT == "Identity added: "* ]]; then
    echo -e "\e[1;32m✔ SSH identity already added\e[0m"
  else
    echo -e "\e[1;31m✖ Failed to add SSH identity\e[0m"
    echo -e "\e[0;90m$OUTPUT\e[0m"
    exit 1
  fi

  # Commit changes using template (editor opens automatically)
  git commit || {
    echo -e "\e[1;31m✖ Commit failed. Aborting push.\e[0m"
    exit 1
  }

  # Push changes
  echo -e "\n\e[1;34m→ Pushing changes to origin/$BRANCH...\e[0m"
  PUSH_OUTPUT=$(git push origin "$BRANCH" 2>&1)
  if [[ $? -eq 0 ]]; then
    echo -e "\e[1;32m✔ Changes pushed successfully to \e[1;34morigin/$BRANCH\e[0m."
  else
    echo -e "\e[1;31m✖ Push failed:\e[0m"
    echo -e "\e[0;90m$PUSH_OUTPUT\e[0m"
    exit 1
  fi
}

fzf_git

if [[ -n "$BRANCH" ]]; then
  do_commit
  push
fi
